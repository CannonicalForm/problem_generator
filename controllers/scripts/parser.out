Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> NUMBER
Rule 2     expression -> expression PLUS expression
Rule 3     expression -> expression MINUS expression
Rule 4     expression -> expression TIMES expression
Rule 5     expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

LPAREN               : 5
MINUS                : 3
NUMBER               : 1
PLUS                 : 2
RPAREN               : 5
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 2 2 3 3 4 4 5 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 1
    LPAREN          shift and go to state 2

    expression                     shift and go to state 3

state 1

    (1) expression -> NUMBER .

    PLUS            reduce using rule 1 (expression -> NUMBER .)
    MINUS           reduce using rule 1 (expression -> NUMBER .)
    TIMES           reduce using rule 1 (expression -> NUMBER .)
    $end            reduce using rule 1 (expression -> NUMBER .)
    RPAREN          reduce using rule 1 (expression -> NUMBER .)


state 2

    (5) expression -> LPAREN . expression RPAREN
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 1
    LPAREN          shift and go to state 2

    expression                     shift and go to state 4

state 3

    (0) S' -> expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            shift and go to state 5
    MINUS           shift and go to state 6
    TIMES           shift and go to state 7


state 4

    (5) expression -> LPAREN expression . RPAREN
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    RPAREN          shift and go to state 8
    PLUS            shift and go to state 5
    MINUS           shift and go to state 6
    TIMES           shift and go to state 7


state 5

    (2) expression -> expression PLUS . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 1
    LPAREN          shift and go to state 2

    expression                     shift and go to state 9

state 6

    (3) expression -> expression MINUS . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 1
    LPAREN          shift and go to state 2

    expression                     shift and go to state 10

state 7

    (4) expression -> expression TIMES . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 1
    LPAREN          shift and go to state 2

    expression                     shift and go to state 11

state 8

    (5) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 5 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 5 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 5 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 5 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 5 (expression -> LPAREN expression RPAREN .)


state 9

    (2) expression -> expression PLUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            reduce using rule 2 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 2 (expression -> expression PLUS expression .)
    $end            reduce using rule 2 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 7

  ! TIMES           [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]


state 10

    (3) expression -> expression MINUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            reduce using rule 3 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 3 (expression -> expression MINUS expression .)
    $end            reduce using rule 3 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 7

  ! TIMES           [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]


state 11

    (4) expression -> expression TIMES expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            reduce using rule 4 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 4 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 4 (expression -> expression TIMES expression .)
    $end            reduce using rule 4 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 4 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 5 ]
  ! MINUS           [ shift and go to state 6 ]
  ! TIMES           [ shift and go to state 7 ]

